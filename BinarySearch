/**
 * @(#)BinarySearch.java
 *
 *
 * @author Swapnil Sonar
 * @version 1.00 2014/2/6
 */
import java.io.*;
import java.util.Scanner;

class SearchingAlgo {
	int inputedNumbers[];
	int sizeOfArray=50;
	int count=0;
	    
    void readFile() throws IOException{
    	int i=0;
    	Scanner fileScan=new Scanner(new File("input.txt"));
    	inputedNumbers=new int[sizeOfArray];
    	
    	while (fileScan.hasNextInt()) {
    		inputedNumbers[i++]=fileScan.nextInt();
    		count++;
    	}	
    }
    
    void search(int searchNum){
    	int firstNum = 0;
    	int lastNum = count-1;
    	int middleNum = (firstNum + lastNum)/2;
    	
    	while (firstNum <= lastNum) 
    	{
    		if(searchNum < inputedNumbers[middleNum])
    			lastNum = middleNum-1;
    		else if(searchNum == inputedNumbers[middleNum])
    		{
    			System.out.println(searchNum + " found at location " + (middleNum + 1) + ".");
                break;
    		}	
    		else
    			firstNum = middleNum+1;
    			
    		middleNum = (firstNum+lastNum)/2;
    	}
    	if ( firstNum > lastNum )
      System.out.println(searchNum + " is not present in the list.\n");
  	}
}

class BinarySearch {
	public static void main (String[] args)  throws IOException {
		SearchingAlgo obj = new SearchingAlgo();
     	obj.readFile();
     	
     	Scanner scan=new Scanner(System.in);
     	System.out.println("Enter the element to search");
		int searchElement = scan.nextInt();
		obj.search(searchElement);
}
}
